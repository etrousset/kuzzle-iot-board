<!doctype html>
<html>

<head>
  <title>Kuzzle MSensor</title>
  <!-- Required meta tags -->
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">

  <!-- Bootstrap CSS -->
  <link rel="stylesheet" href="css/bootstrap.min.css" crossorigin="anonymous">
  <script src="js/jquery-3.2.1.min.js"></script>
  <script>
    $(function() {
      console.log("hello");
      $('#navbar').load("navbar.html", () => document.getElementById('menu_dashboard').className = "item nav-link active")
    })
  </script>

  <script type="text/javascript" src="js/google-chart-loarder.js"></script>
  <script type="text/javascript">
    google.charts.load('current', {
      'packages': ['corechart']
    });
    //  google.charts.setOnLoadCallback(drawChart);

    var light_history = [
      ['time (s)', 'Light level (lux)'],
    ]

    var chart = null
    var chart_need_draw = false
    var chart_ready = true


    function drawChart() {
      var data = google.visualization.arrayToDataTable(light_history);

      var options = {
        title: 'Light level history',
        curveType: 'function',
        hAxis: {
          title: 'Time (sec)',
          titleTextStyle: {
            color: '#333'
          }
        },
        vAxis: {
          minValue: 0
        }
      };

      chart_need_draw = false
      chart_ready = false
      //  var chart = new google.visualization.AreaChart(document.getElementById('chart_div'));
      if (!chart) {
        chart = new google.visualization.LineChart(document.getElementById('chart_div'));
        google.visualization.events.addListener(chart, 'ready', on_light_lvl_chat_ready);
      }

      chart.draw(data, options);
    }
  </script>

</head>

<body onload="kuzzle_init()">
  <div id="navbar"></div>

  <div class="container">
    <div class="row">
      <div class="col-sm mt-4">
        <div class="card" style="width: 15rem;">
          <div class="card-header">
            RFID Card Reader
          </div>
          <div class="card-body">
            <div class="card-text" id='rfid_content'>
            </div>
          </div>
        </div>
      </div>
      <div class="col-sm  mt-4">
        <div class="card" style="width: 15rem;">
          <div class="card-header">
            Buttons
          </div>
          <div class="card-body">
            <div class="card-text" id='buttons_content'>
              <div class="">
                <div class="badge badge-secondary" id="button_0">Btn O</div>
                <div class="badge badge-secondary" id="button_1">Btn 1</div>
                <div class="badge badge-secondary" id="button_2">Btn 2</div>
                <div class="badge badge-secondary" id="button_3">Btn 3</div>
              </div>
            </div>
          </div>
        </div>
      </div>
      <div class="col-sm  mt-4">
        <div class="card" style="width: 15rem;">
          <div class="card-header">
            Motion sensor
          </div>
          <div class="card-body">
            <div class="card-text">
              <div class="badge badge-secondary" id='motion_content'>Motion</div>
            </div>
          </div>
        </div>
      </div>
      <div class="col-sm  mt-4">
        <div class="card" style="width: 15rem;">
          <div class="card-header">
            Light sensor
          </div>
          <div class="card-body">
            <div class="card-text" id='light_level'>
              Light level almost in Lux
            </div>
          </div>
        </div>
      </div>
    </div>
    <div id="chart_div" style="width: 100%; height: 500px;"></div>
  </div>

  <script src="js/jquery-3.2.1.min.js"></script>
  <script src="js/popper.min.js" integrity="sha384-vFJXuSJphROIrBnz7yo7oB41mKfc8JzQZiCq4NCceLEaO4IHwicKwpJf9c9IpFgh" crossorigin="anonymous"></script>
  <script src="js/bootstrap.min.js" integrity="sha384-alpBpkh1PFOepccYVYDB4do5UnbKysX5WZXm3XxPqe5iKTfUKjNkCk9SaVuEZflJ" crossorigin="anonymous"></script>
  <script src="js/bluebird.min.js"></script>
  <script src="js/kuzzle.js"></script>
  <script src="js/js-yaml.min.js"></script>
  <style>
    .alert {
      margin-bottom: 3px;
      height: 30px;
      line-height: 30px;
      padding: 0px 15px;
    }

    .img-success {
      content: url(./icons/glyphicons-199-ok-circle-white.png);
    }

    .img-danger {
      content: url(./icons/glyphicons-198-remove-circle.png);
    }

    .img-small {
      width: 15px;
      height: 15px;
    }
  </style>
  <script type="text/javascript">
    MAX_HISTORY = 500

    function subscribe_to_rfid(device) {
      console.log("Subscribing to RFID card events");
      device_state_col.subscribe({
            equals: {
              device_id: 'NFC_' + device.uid
            }
          }, {
            subscribeToSelf: false
          },
          (err, res) => {
            var state = res.document.content.state
            if (state.in_field) {
              console.log('Card detected in sensor field: ', state.card_id)
              card_div = document.getElementById('rfid_content_' + state.card_id)
              if (card_div) {
                card_div.className = 'badge badge-primary'
              } else {
                document.getElementById('rfid_content').innerHTML += `<div class="badge badge-primary" id="rfid_content_${state.card_id}">${state.card_id}</div></br>`
              }
            } else {
              console.log('Card left sensor field: ', state.card_id)
              card_div = document.getElementById('rfid_content_' + state.card_id)
              card_div.className = "badge badge-secondary"
            }
          })
        .onDone((a) => {
          console.log("[DONE] Subscribing to RFID card events");
        })

    }

    function subscribe_to_buttons(device) {
      console.log("Subscribing to button events");
      device_state_col.subscribe({
            equals: {
              device_id: 'buttons_' + device.uid
            }
          }, {
            subscribeToSelf: false
          },
          (err, res) => {
            var state = res.document.content.state
            console.log('button states: ', state)

            button_0_div = document.getElementById('button_0')
            if (state.button_0 === "PRESSED") {
              button_0_div.className = "badge badge-primary"
            } else {
              button_0_div.className = "badge badge-secondary"
            }

            button_1_div = document.getElementById('button_1')
            if (state.button_1 === "PRESSED") {
              button_1_div.className = "badge badge-primary"
            } else {
              button_1_div.className = "badge badge-secondary"
            }

            button_2_div = document.getElementById('button_2')
            if (state.button_2 === "PRESSED") {
              button_2_div.className = "badge badge-primary"
            } else {
              button_2_div.className = "badge badge-secondary"
            }


            button_3_div = document.getElementById('button_3')
            if (state.button_3 === "PRESSED") {
              button_3_div.className = "badge badge-primary"
            } else {
              button_3_div.className = "badge badge-secondary"
            }
          })
        .onDone((a) => {
          console.log("[DONE] Subscribing to button events");
        })
    }

    function subscribe_to_motion_sensor(device) {
      console.log("Subscribing to motion sensor events");
      device_state_col.subscribe({
            equals: {
              device_id: 'motion_' + device.uid
            }
          }, {
            subscribeToSelf: false
          },
          (err, res) => {
            var state = res.document.content.state
            console.log('motion sensor states: ', state)

            if (state.motion)
              document.getElementById('motion_content').className = "badge badge-primary"
            else
              document.getElementById('motion_content').className = "badge badge-secondary"
          })
        .onDone((a) => {
          console.log("[DONE] Subscribing to motion sensor events");
        })
    }

    function subscribe_to_light_sensor(device) {
      console.log("Subscribing to light level sensor events");
      device_state_col.subscribe({
            equals: {
              device_id: 'light_lvl_' + device.uid
            }
          }, {
            subscribeToSelf: false
          },
          (err, res) => {
            var state = res.document.content.state
            document.getElementById('light_level').innerHTML = `<h3>${state.level}lux</h3>`
            light_history.push([Date.now() / 1000 - t0, parseFloat(state.level)])
            if (light_history.length > MAX_HISTORY)
              light_history.splice(1, 1)
            chart_need_draw = true
            if(chart_ready)
              drawChart()
          })
        .onDone((a) => {
          console.log("[DONE] Subscribing to light level sensor events");
        })
    }
    function on_light_lvl_chat_ready() {
      chart_ready = true;
      if(chart_need_draw)
        drawChart()
    }

    function kuzzle_init() {
      console.log('kuzzle_init');

      config = ${config}
      var device = ${device}

      console.log('Device info:', device);
      console.log('Configuration:', config);

      kuzzlehost = config.kuzzle.host
      kuzzleport = config.kuzzle.port
      console.log("Connecting to kuzzle: ", kuzzlehost, ":", kuzzleport);

      kuzzle = new Kuzzle(kuzzlehost, {
          port: kuzzleport,
          autoReconnect: false
        },
        (err, res) => {
          if (err) {
            console.log('Kuzzle connection error:', err)
          } else {
            console.log("Connected to Kuzzle: ", kuzzlehost, ":", kuzzleport);
            kuzzle.setDefaultIndex('iot');
            device_state_col = kuzzle.collection("device-state")

            t0 = Date.now() / 1000

            subscribe_to_rfid(device)
            subscribe_to_buttons(device)
            subscribe_to_motion_sensor(device)
            subscribe_to_light_sensor(device)
          }
        })
    }
  </script>

</body>

</html>
